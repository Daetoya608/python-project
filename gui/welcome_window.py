# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'registration_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


from PyQt5 import QtCore, QtGui, QtWidgets

from gui.registration_process_window import Ui_RegistrationWindow
import mainwindow

def go_to_registration():
    # global ui
    # global MainWindow
    mainwindow.ui = Ui_RegistrationWindow()
    mainwindow.ui.setupUi(mainwindow.MainWindow)
    mainwindow.MainWindow.show()


class Ui_WelcomeWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(450, 750)
        MainWindow.setMinimumSize(QtCore.QSize(450, 750))
        MainWindow.setMaximumSize(QtCore.QSize(450, 750))
        MainWindow.setStyleSheet("background-color: rgb(119, 118, 123);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.autorize_button = QtWidgets.QPushButton(self.centralwidget)
        self.autorize_button.setGeometry(QtCore.QRect(70, 370, 291, 41))
        self.autorize_button.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.autorize_button.setObjectName("autorize_button")
        self.autorize_button.clicked.connect(self.handle_authorize)

        self.register_button = QtWidgets.QPushButton(self.centralwidget)
        self.register_button.setGeometry(QtCore.QRect(70, 450, 291, 41))
        self.register_button.setStyleSheet("background-color: rgb(87, 227, 137);")
        self.register_button.setObjectName("register_button")
        self.register_button.clicked.connect(self.handle_register)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(85, 70, 251, 211))
        font = QtGui.QFont()
        font.setPointSize(60)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(97, 53, 131, 255), stop:1 rgba(192, 97, 203, 255));\n"
"color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.small_attemption = QtWidgets.QLabel(self.centralwidget)
        self.small_attemption.setGeometry(QtCore.QRect(10, 662, 451, 20))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.small_attemption.setFont(font)
        self.small_attemption.setOpenExternalLinks(False)
        self.small_attemption.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.small_attemption.setObjectName("small_attemption")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 450, 27))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Scamberries"))
        self.autorize_button.setText(_translate("MainWindow", "Авторизация"))
        self.register_button.setText(_translate("MainWindow", "Регистрация"))
        self.label.setText(_translate("MainWindow", "   SB"))
        self.small_attemption.setText(_translate("MainWindow", "используя приложение вы соглашаетесь совсеми условиями несуществующего договора"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))

    def handle_authorize(self):
        print("Нажата кнопка 'Авторизация'")
        # Здесь можно добавить код для перехода к авторизации или действия, связанные с авторизацией

    # Функция, которая вызывается при нажатии кнопки регистрации
    def handle_register(self):
        go_to_registration()




# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_WelcomeWindow()
#     #ui = Ui_RegistrationWindow()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())

import sys
app = QtWidgets.QApplication(sys.argv)
mainwindow.MainWindow = QtWidgets.QMainWindow()
mainwindow.ui = Ui_WelcomeWindow()
#ui = Ui_RegistrationWindow()
mainwindow.ui.setupUi(mainwindow.MainWindow)
mainwindow.MainWindow.show()
sys.exit(app.exec_())
