# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'watch_feedback_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import app.services.registration as reg


class Ui_WatchFeedbackWindow(object):
    def setupUi(self, MainWindow, current_seller, current_card):
        self.current_seller_index: int = current_seller
        self.current_card_index: int = current_card
        self.current_feedback_index: int = 0
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(450, 750)
        MainWindow.setMinimumSize(QtCore.QSize(450, 750))
        MainWindow.setMaximumSize(QtCore.QSize(450, 750))
        MainWindow.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-40, 0, 491, 61))
        self.label.setStyleSheet("background-color: rgb(119, 118, 123);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.pushButton_Exit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Exit.setGeometry(QtCore.QRect(360, 17, 71, 31))
        self.pushButton_Exit.setStyleSheet("background-color: rgb(224, 27, 36);")
        self.pushButton_Exit.setObjectName("pushButton_Exit")
        self.pushButton_Exit.clicked.connect(self.handle_exit)

        self.pushButton_Home = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Home.setGeometry(QtCore.QRect(270, 17, 71, 31))
        self.pushButton_Home.setStyleSheet("background-color: rgb(51, 209, 122);")
        self.pushButton_Home.setObjectName("pushButton_Home")
        self.pushButton_Home.clicked.connect(self.handle_home)

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 160, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.plainTextEdit_feedbackText = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_feedbackText.setGeometry(QtCore.QRect(20, 260, 381, 191))
        self.plainTextEdit_feedbackText.setStyleSheet("background-color: rgb(246, 245, 244);")
        self.plainTextEdit_feedbackText.setObjectName("plainTextEdit_feedbackText")
        self.plainTextEdit_feedbackText.setReadOnly(True)

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 220, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 80, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_name = QtWidgets.QLabel(self.centralwidget)
        self.label_name.setGeometry(QtCore.QRect(100, 80, 361, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_name.setFont(font)
        self.label_name.setStyleSheet("color: rgb(46, 194, 126);")
        self.label_name.setText("")
        self.label_name.setObjectName("label_name")
        self.label_rate = QtWidgets.QLabel(self.centralwidget)
        self.label_rate.setGeometry(QtCore.QRect(120, 160, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_rate.setFont(font)
        self.label_rate.setStyleSheet("color: rgb(46, 194, 126);")
        self.label_rate.setText("")
        self.label_rate.setObjectName("label_rate")
        self.pushButton_next = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_next.setGeometry(QtCore.QRect(230, 670, 201, 51))
        self.pushButton_next.setObjectName("pushButton")
        self.pushButton_next.clicked.connect(self.handle_next)

        self.pushButton_prev = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_prev.setGeometry(QtCore.QRect(10, 670, 201, 51))
        self.pushButton_prev.setObjectName("pushButton_2")
        self.pushButton_prev.clicked.connect(self.handle_prev)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.set_current_data()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Scamberries - Отзывы"))
        self.pushButton_Exit.setText(_translate("MainWindow", "Exit"))
        self.pushButton_Home.setText(_translate("MainWindow", "Home"))
        self.label_2.setText(_translate("MainWindow", "Оценка:"))
        self.label_3.setText(_translate("MainWindow", "Подробности:"))
        self.label_4.setText(_translate("MainWindow", "Name:"))
        self.pushButton_next.setText(_translate("MainWindow", "Следующее"))
        self.pushButton_prev.setText(_translate("MainWindow", "Предыдущее"))


    def set_data(self, name: str, rate: str, des: str = ""):
        self.label_name.setText(name)
        self.label_rate.setText(rate)
        self.plainTextEdit_feedbackText.setPlainText(des)


    def set_current_data(self):
        buyer_index = reg.registered_sellers[self.current_seller_index].product_cards_list[self.current_card_index].feedbacks[
            self.current_feedback_index].buyer_id
        name = reg.registered_buyers[buyer_index].user_name
        rate = reg.registered_sellers[self.current_seller_index].product_cards_list[self.current_card_index].feedbacks[
            self.current_feedback_index].rating
        des = reg.registered_sellers[self.current_seller_index].product_cards_list[self.current_card_index].feedbacks[
            self.current_feedback_index].comment
        self.set_data(name, str(rate), des)


    def next(self):
        if self.current_feedback_index == len(reg.registered_sellers[self.current_seller_index].product_cards_list[
           self.current_card_index].feedbacks) - 1:
            return
        self.current_feedback_index += 1


    def prev(self):
        if self.current_feedback_index == 0:
            return
        self.current_feedback_index -= 1


    def handle_exit(self):
        from welcome_window import Ui_WelcomeWindow
        import gui_utils
        gui_utils.change_window(Ui_WelcomeWindow())


    def handle_home(self):
        import gui_utils
        from gui.buyer_mode_window import Ui_BuyerModeWindow
        gui_utils.change_window(Ui_BuyerModeWindow())


    def handle_next(self):
        self.next()
        self.set_current_data()

    def handle_prev(self):
        self.prev()
        self.set_current_data()

