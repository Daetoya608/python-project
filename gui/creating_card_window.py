# -*- coding: utf-8 -*-
# from pickletools import name2i
# from sqlite3 import complete_statement

# Form implementation generated from reading ui file 'creating_card_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import mainwindow
import gui_utils
import app.services.registration as registration


class Ui_AddCardWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(450, 750)
        MainWindow.setMinimumSize(QtCore.QSize(450, 750))
        MainWindow.setMaximumSize(QtCore.QSize(450, 750))
        MainWindow.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-40, 0, 491, 61))
        self.label.setStyleSheet("background-color: rgb(119, 118, 123);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.pushButton_Exit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Exit.setGeometry(QtCore.QRect(360, 17, 71, 31))
        self.pushButton_Exit.setStyleSheet("background-color: rgb(224, 27, 36);")
        self.pushButton_Exit.setObjectName("pushButton_Exit")
        self.pushButton_Exit.clicked.connect(self.handle_exit)

        self.pushButton_Home = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Home.setGeometry(QtCore.QRect(270, 17, 71, 31))
        self.pushButton_Home.setStyleSheet("background-color: rgb(51, 209, 122);")
        self.pushButton_Home.setObjectName("pushButton_Home")
        self.pushButton_Home.clicked.connect(self.handle_home)

        self.label__name = QtWidgets.QLabel(self.centralwidget)
        self.label__name.setGeometry(QtCore.QRect(10, 70, 191, 41))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label__name.setFont(font)
        self.label__name.setObjectName("label_2")
        self.lineEdit_Name = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_Name.setGeometry(QtCore.QRect(10, 110, 431, 30))
        self.lineEdit_Name.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_Name.setObjectName("lineEdit_Name")
        self.label__cost = QtWidgets.QLabel(self.centralwidget)
        self.label__cost.setGeometry(QtCore.QRect(10, 170, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label__cost.setFont(font)
        self.label__cost.setObjectName("label_3")
        self.lineEdit_Cost = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_Cost.setGeometry(QtCore.QRect(120, 170, 221, 30))
        self.lineEdit_Cost.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_Cost.setObjectName("lineEdit_Cost")
        self.label__descrip = QtWidgets.QLabel(self.centralwidget)
        self.label__descrip.setGeometry(QtCore.QRect(10, 230, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label__descrip.setFont(font)
        self.label__descrip.setObjectName("label_4")
        self.textEdit_Description = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_Description.setGeometry(QtCore.QRect(10, 270, 391, 221))
        self.textEdit_Description.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.textEdit_Description.setObjectName("textEdit_Description")
        self.pushButton_addCard = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_addCard.setGeometry(QtCore.QRect(40, 610, 361, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_addCard.setFont(font)
        self.pushButton_addCard.setStyleSheet("background-color: rgb(143, 240, 164);")
        self.pushButton_addCard.setObjectName("pushButton_addCard")
        self.pushButton_addCard.clicked.connect(self.handle_add_card)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Scamberries - Создать карточку"))
        self.pushButton_Exit.setText(_translate("MainWindow", "Exit"))
        self.pushButton_Home.setText(_translate("MainWindow", "Home"))
        self.label__name.setText(_translate("MainWindow", "Название товара:"))
        self.label__cost.setText(_translate("MainWindow", "Цена ($):"))
        self.label__descrip.setText(_translate("MainWindow", "Описание:"))
        self.pushButton_addCard.setText(_translate("MainWindow", "Добавить карточку товара"))

    def handle_add_card(self):
        from seller_mode_window import Ui_SellerModeWindow
        import app.services.registration as reg
        name: str = self.lineEdit_Name.text()
        cost: str = self.lineEdit_Cost.text()
        description: str = self.textEdit_Description.toPlainText()
        registration.registered_sellers[mainwindow.current_seller_account_ind].add_product_card(name, cost, description)
        cur_seller = reg.registered_sellers[mainwindow.current_seller_account_ind]
        gui_utils.change_window(Ui_SellerModeWindow(), cur_seller.store_name, cur_seller.email, cur_seller.phone_num)

    def handle_home(self):
        from gui.seller_mode_window import Ui_SellerModeWindow
        import app.services.registration as reg
        name = reg.registered_sellers[mainwindow.current_seller_account_ind].store_name
        email = reg.registered_sellers[mainwindow.current_seller_account_ind].email
        tel_num = reg.registered_sellers[mainwindow.current_seller_account_ind].phone_num
        gui_utils.change_window(Ui_SellerModeWindow(), name, email, tel_num)

    def handle_exit(self):
        from welcome_window import Ui_WelcomeWindow
        gui_utils.change_window(Ui_WelcomeWindow())
